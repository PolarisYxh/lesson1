// glslv output by Cg compiler
// cgc version 3.1.0013, build date Apr 18 2012
// command line args: -profile glslv
// source file: raycasting.cg
//vendor NVIDIA Corporation
//version 3.1.0.13
//profile glslv
//program main_v
//semantic main_v.world
//semantic main_v.worldViewProj
//semantic main_v.texViewProj
//var float4x4 world :  : _world1[0], 4 : 1 : 1
//var float4x4 worldViewProj :  : _worldViewProj1[0], 4 : 2 : 1
//var float4x4 texViewProj :  : _texViewProj1[0], 4 : 3 : 1
//var float4 posIn.position : $vin.POSITION : ATTR0 : 0 : 1
//var float4 posIn.texCoord : $vin.TEXCOORD : ATTR8 : 0 : 1
//var float4 main_v.position : $vout.POSITION : HPOS : -1 : 1
//var float4 main_v.worldPos : $vout.TEXCOORD0 : TEX0 : -1 : 1
//var float4 main_v.projPos : $vout.TEXCOORD1 : TEX1 : -1 : 1
//var float4 main_v.texCoord : $vout.TEXCOORD2 : TEX2 : -1 : 1

#version 110

struct VertexIn {
    vec4 _position;
    vec4 _texCoord;
};

struct VertexScreen {
    vec4 _position1;
    vec4 _worldPos;
    vec4 _projPos;
    vec4 _texCoord1;
};

uniform vec4 _world1[4];
uniform vec4 _worldViewProj1[4];
uniform vec4 _texViewProj1[4];
vec4 _r0005;
vec4 _r0015;
vec4 _r0025;

 // main procedure, the original name was main_v
void main()
{


    _r0005.x = dot(_worldViewProj1[0], gl_Vertex);
    _r0005.y = dot(_worldViewProj1[1], gl_Vertex);
    _r0005.z = dot(_worldViewProj1[2], gl_Vertex);
    _r0005.w = dot(_worldViewProj1[3], gl_Vertex);
    _r0015.x = dot(_world1[0], gl_Vertex);
    _r0015.y = dot(_world1[1], gl_Vertex);
    _r0015.z = dot(_world1[2], gl_Vertex);
    _r0015.w = dot(_world1[3], gl_Vertex);
    _r0025.x = dot(_texViewProj1[0], _r0015);
    _r0025.y = dot(_texViewProj1[1], _r0015);
    _r0025.z = dot(_texViewProj1[2], _r0015);
    _r0025.w = dot(_texViewProj1[3], _r0015);
    gl_TexCoord[2] = gl_MultiTexCoord0;
    gl_TexCoord[0] = _r0015;
    gl_TexCoord[1] = _r0025;
    gl_Position = _r0005;
    return;
} // main end

